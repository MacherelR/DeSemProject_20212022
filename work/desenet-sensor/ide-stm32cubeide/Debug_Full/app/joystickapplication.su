new:173:33:void* operator new(std::size_t, void*)	16	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
shared_ptr_base.h:308:5:void std::_Sp_counted_base<_Lp>::_M_release() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
ixfevent.h:48:23:IXFEvent::eEventType IXFEvent::getEventType() const	16	static
ixfevent.h:61:16:int IXFEvent::getId() const	16	static
xfeventstatus.h:32:5:EventStatus::EventStatus(EventStatus::eEventStatus)	16	static
abstractapplication.h:23:9:desenet::sensor::AbstractApplication::AbstractApplication()	16	static
abstractapplication.h:24:17:desenet::sensor::AbstractApplication::~AbstractApplication()	16	static
abstractapplication.h:24:17:virtual desenet::sensor::AbstractApplication::~AbstractApplication()	16	static
ijoystickobserver.h:17:11:IJoystickObserver::IJoystickObserver()	16	static
ijoystickobserver.h:18:10:IJoystickObserver::~IJoystickObserver()	16	static
ijoystickobserver.h:18:10:virtual IJoystickObserver::~IJoystickObserver()	16	static
shared_ptr_base.h:1169:7:std::__shared_ptr<_Tp, _Lp>::~__shared_ptr() [with _Tp = unsigned char; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr.h:103:11:std::shared_ptr<unsigned char>::~shared_ptr()	16	static
sharedbuffer.hpp:20:11:hei::SharedBuffer<unsigned char>::~SharedBuffer()	16	static
initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = unsigned char]	16	static
initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = unsigned char]	16	static
factory.h:39:19:static app::Factory& app::Factory::instance()	8	static
joystickapplication.cpp:12:1:app::JoystickApplication::JoystickApplication()	16	static
joystickapplication.cpp:16:1:app::JoystickApplication::~JoystickApplication()	16	static
joystickapplication.cpp:16:1:virtual app::JoystickApplication::~JoystickApplication()	16	static
joystickapplication.cpp:18:6:void app::JoystickApplication::initialize()	16	static
joystickapplication.cpp:23:6:void app::JoystickApplication::start()	16	static
joystickapplication.cpp:27:6:virtual void app::JoystickApplication::onPositionChange(IJoystick::Position)	32	static
joystickapplication.cpp:33:13:virtual EventStatus app::JoystickApplication::processEvent()	56	static
joystickapplication.cpp:89:18:board::Joystick& app::JoystickApplication::joystick()	16	static
joystickapplication.cpp:94:21:IJoystick::Position app::JoystickApplication::_readJoystickValue()	16	static
shared_ptr_base.h:131:7:void std::_Sp_counted_base<_Lp>::_M_destroy() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
address.hpp:47:2:phy::Address<size>::Address(std::initializer_list<unsigned char>) [with unsigned int size = 4]	32	static
sharedbuffer.hpp:224:19:T& hei::SharedBuffer<T>::operator[](hei::SharedBuffer<T>::sizeType) [with T = unsigned char]	16	static
shared_ptr_base.h:727:7:std::__shared_count<_Lp>::~__shared_count() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
sharedbuffer.hpp:43:67:hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>	16	static
sharedbuffer.hpp:42:18:hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]	40	static
shared_ptr_base.h:121:7:std::_Sp_counted_base<_Lp>::~_Sp_counted_base() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:121:7:std::_Sp_counted_base<_Lp>::~_Sp_counted_base() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
initializer_list:79:7:constexpr const _E* std::initializer_list<_E>::end() const [with _E = unsigned char]	24	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = const unsigned char*; _OI = unsigned char*]	32	static
shared_ptr_base.h:1309:7:std::__shared_ptr<_Tp, _Lp>::element_type* std::__shared_ptr<_Tp, _Lp>::get() const [with _Tp = unsigned char; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr.h:127:17:constexpr std::shared_ptr<_Tp>::shared_ptr() [with _Tp = unsigned char]	16	static
shared_ptr.h:156:2:std::shared_ptr<_Tp>::shared_ptr(_Yp*, _Deleter) [with _Yp = unsigned char; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; <template-parameter-2-3> = void; _Tp = unsigned char]	32	static
shared_ptr.h:333:7:std::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = unsigned char]	24	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::shared_ptr<unsigned char>&]	16	static
shared_ptr_base.h:1176:7:std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::__shared_ptr<_Tp, _Lp>&&) [with _Tp = unsigned char; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = const unsigned char*]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = const unsigned char*; _OI = unsigned char*]	32	static
shared_ptr_base.h:1118:17:constexpr std::__shared_ptr<_Tp, _Lp>::__shared_ptr() [with _Tp = unsigned char; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>&]	16	static
shared_ptr_base.h:1133:2:std::__shared_ptr<_Tp, _Lp>::__shared_ptr(_Yp*, _Deleter) [with _Yp = unsigned char; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; <template-parameter-2-3> = void; _Tp = unsigned char; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	32	static
shared_ptr_base.h:1263:7:std::__shared_ptr<_Tp, _Lp>& std::__shared_ptr<_Tp, _Lp>::operator=(std::__shared_ptr<_Tp, _Lp>&&) [with _Tp = unsigned char; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
shared_ptr_base.h:616:17:constexpr std::__shared_count<_Lp>::__shared_count() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:756:7:void std::__shared_count<_Lp>::_M_swap(std::__shared_count<_Lp>&) [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = const unsigned char*]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = unsigned char*]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const unsigned char*; _OI = unsigned char*]	32	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = unsigned char*]	16	static
shared_ptr_base.h:646:2:std::__shared_count<_Lp>::__shared_count(_Ptr, _Deleter) [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; <template-parameter-2-3> = void; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	40	static
shared_ptr_base.h:1388:2:typename std::enable_if<(! std::__shared_ptr<_Tp, _Lp>::__has_esft_base<_Yp2>::value)>::type std::__shared_ptr<_Tp, _Lp>::_M_enable_shared_from_this_with(_Yp*) [with _Yp = unsigned char; _Yp2 = unsigned char; _Tp = unsigned char; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__shared_ptr<unsigned char, __gnu_cxx::_S_single>&]	16	static
shared_ptr_base.h:1324:7:void std::__shared_ptr<_Tp, _Lp>::swap(std::__shared_ptr<_Tp, _Lp>&) [with _Tp = unsigned char; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
stl_algobase.h:375:2:static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = unsigned char; bool _IsMove = false]	32	static
shared_ptr_base.h:652:2:std::__shared_count<_Lp>::__shared_count(_Ptr, _Deleter, _Alloc) [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; <template-parameter-2-4> = void; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	56	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = unsigned char*&]	16	static
move.h:182:5:typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp> >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = unsigned char*]	24	static
allocator.h:151:2:std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = void; _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
allocator.h:153:7:std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
allocated_ptr.h:95:5:std::__allocated_ptr<_Alloc> std::__allocate_guarded(_Alloc&) [with _Alloc = std::allocator<std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
allocated_ptr.h:70:7:std::__allocated_ptr<_Alloc>::~__allocated_ptr() [with _Alloc = std::allocator<std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
allocated_ptr.h:85:19:std::__allocated_ptr<_Alloc>::value_type* std::__allocated_ptr<_Alloc>::get() [with _Alloc = std::allocator<std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<void>&]	16	static
shared_ptr_base.h:464:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Sp_counted_deleter(_Ptr, _Deleter, const _Alloc&) [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	32	static
allocated_ptr.h:78:7:std::__allocated_ptr<_Alloc>& std::__allocated_ptr<_Alloc>::operator=(std::nullptr_t) [with _Alloc = std::allocator<std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
new_allocator.h:80:7:__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
new_allocator.h:89:7:__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
allocated_ptr.h:52:7:std::__allocated_ptr<_Alloc>::__allocated_ptr(_Alloc&, std::__allocated_ptr<_Alloc>::pointer) [with _Alloc = std::allocator<std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single> >]	24	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
ptr_traits.h:155:5:constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
shared_ptr_base.h:117:7:std::_Sp_counted_base<_Lp>::_Sp_counted_base() [with __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:446:2:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_Impl(_Ptr, _Deleter, const _Alloc&) [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	24	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
move.h:47:5:constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::allocator<std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single> >]	16	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	24	static
shared_ptr_base.h:415:16:std::_Sp_ebo_helper<_Nm, _Tp, true>::_Sp_ebo_helper(_Tp&&) [with int _Nm = 0; _Tp = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>]	16	static
shared_ptr_base.h:414:16:std::_Sp_ebo_helper<_Nm, _Tp, true>::_Sp_ebo_helper(const _Tp&) [with int _Nm = 1; _Tp = std::allocator<void>]	16	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::_Sp_counted_deleter<unsigned char*, hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>, std::allocator<void>, __gnu_cxx::_S_single>]	16	static
joystickapplication.cpp:97:1:void __static_initialization_and_destruction_0(int, int)	40	static
shared_ptr_base.h:467:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::~_Sp_counted_deleter() [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:467:7:std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::~_Sp_counted_deleter() [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:470:7:void std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_dispose() [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:474:7:void std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_destroy() [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	32	static
shared_ptr_base.h:482:7:void* std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_M_get_deleter(const std::type_info&) [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
address.hpp:56:10:phy::Address<size>::~Address() [with unsigned int size = 4]	16	static
address.hpp:56:10:phy::Address<size>::~Address() [with unsigned int size = 4]	16	static
shared_ptr_base.h:450:12:_Deleter& std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_M_del() [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:451:10:_Alloc& std::_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>::_Impl::_M_alloc() [with _Ptr = unsigned char*; _Deleter = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>; _Alloc = std::allocator<void>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_single]	16	static
shared_ptr_base.h:418:7:static _Tp& std::_Sp_ebo_helper<_Nm, _Tp, true>::_S_get(std::_Sp_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = hei::SharedBuffer<T>::SharedBuffer(hei::SharedBuffer<T>::sizeType) [with T = unsigned char]::<lambda(hei::SharedBuffer<unsigned char>::pointer)>]	16	static
shared_ptr_base.h:418:7:static _Tp& std::_Sp_ebo_helper<_Nm, _Tp, true>::_S_get(std::_Sp_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 1; _Tp = std::allocator<void>]	16	static
joystickapplication.cpp:97:1:cpp)	8	static
joystickapplication.cpp:97:1:cpp)	8	static
